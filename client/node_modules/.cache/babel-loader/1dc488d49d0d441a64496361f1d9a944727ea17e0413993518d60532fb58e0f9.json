{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Documents/react/practice/Assingment/mern-todo-app/client/src/component/AllUsers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, styled } from '@mui/material';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { getusers } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled(Table)`\nwidth:90%;\nmargin:50px 0 0 50px;\n`;\n_c = StyledTable;\nconst THead = styled(TableRow)`\n& > th{\n  font-size:15px;\n  background:#000000;\n  color:#FFFFFF;\n}\n`;\n_c2 = THead;\nconst TRow = styled(TableRow)`\n   &td{\n    font-size:18px\n   }\n`;\nconst AllUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n  const getAllUsers = async () => {\n    let response = await getusers();\n    console.log(response);\n    setUsers(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTable, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(THead, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"PHONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: users.map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AllUsers, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c3 = AllUsers;\nexport default AllUsers;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"THead\");\n$RefreshReg$(_c3, \"AllUsers\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableHead","TableCell","Paper","TableRow","TableBody","Button","styled","useNavigate","Link","getusers","StyledTable","THead","TRow","AllUsers","users","setUsers","getAllUsers","response","console","log","data","map"],"sources":["/Users/abhishekkumar/Documents/react/practice/Assingment/mern-todo-app/client/src/component/AllUsers.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, styled } from '@mui/material'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { getusers } from '../api/api'\n\n\n\nconst StyledTable = styled(Table)`\nwidth:90%;\nmargin:50px 0 0 50px;\n`\n\nconst THead = styled(TableRow)`\n& > th{\n  font-size:15px;\n  background:#000000;\n  color:#FFFFFF;\n}\n`\n\nconst TRow = styled(TableRow)`\n   &td{\n    font-size:18px\n   }\n`\n\nconst AllUsers = () => {\n\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    getAllUsers();\n  }, [])\n\n  const getAllUsers = async () => {\n    let response = await getusers();\n    console.log(response)\n    setUsers(response.data);\n  }\n\n  return (\n    <StyledTable>\n      <TableHead>\n        <THead>\n          <TableCell>ID</TableCell>\n          <TableCell>NAME</TableCell>\n          <TableCell>USERNAME</TableCell>\n          <TableCell>EMAIL</TableCell>\n          <TableCell>PHONE</TableCell>\n          <TableCell></TableCell>\n        </THead>\n      </TableHead>\n\n      <TableBody>\n        {users.map}\n\n      </TableBody>\n\n    </StyledTable>\n  )\n}\n\nexport default AllUsers"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AACvG,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,QAAQ,QAAQ,YAAY;AAAA;AAIrC,MAAMC,WAAW,GAAGJ,MAAM,CAACP,KAAK,CAAE;AAClC;AACA;AACA,CAAC;AAAA,KAHKW,WAAW;AAKjB,MAAMC,KAAK,GAAGL,MAAM,CAACH,QAAQ,CAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,MANKQ,KAAK;AAQX,MAAMC,IAAI,GAAGN,MAAM,CAACH,QAAQ,CAAE;AAC9B;AACA;AACA;AACA,CAAC;AAED,MAAMU,QAAQ,GAAG,MAAM;EAAA;EAErB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdkB,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,YAAY;IAC9B,IAAIC,QAAQ,GAAG,MAAMR,QAAQ,EAAE;IAC/BS,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBF,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC;EACzB,CAAC;EAED,oBACE,QAAC,WAAW;IAAA,wBACV,QAAC,SAAS;MAAA,uBACR,QAAC,KAAK;QAAA,wBACJ,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACzB,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC3B,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eAC/B,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC5B,QAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC5B,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA;IACjB;MAAA;MAAA;MAAA;IAAA,QACE,eAEZ,QAAC,SAAS;MAAA,UACPN,KAAK,CAACO;IAAG;MAAA;MAAA;MAAA;IAAA,QAEA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAElB,CAAC;AAAA,GAlCKR,QAAQ;AAAA,MAARA,QAAQ;AAoCd,eAAeA,QAAQ;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}